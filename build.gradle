plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'site.jigume'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //Security, Jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //JPA, DB, SQL
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-spatial:6.2.5.Final'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //Lombok
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    //AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
    useJUnitPlatform()
}

// Jacoco 설정
jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        // 원하는 리포트를 켜고 끌 수 있습니다.
        html.enabled true
        xml.enabled false
        csv.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.70
            }
        }

        rule {
            // 룰을 간단히 켜고 끌 수 있습니다.
            enabled = true

            // 룰을 체크할 단위는 클래스 단위
            element = 'CLASS'

            // 브랜치 커버리지
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }

            // 라인 커버리지
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }

            // 빈 줄을 제외한 코드의 라인수를 최대 라인 제한합니다.
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 200
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()

    jacoco {
        excludes += ["com/jigume/config/**",
                     "com/jigume/exception/**",
                     "com/jigume/repository/**",
                     "com/jigume/service/member/KakaoService.class",
                     "com/jigume/service/member/NaverService.class",
                     "com/jigume/service/member/AppleService.class"
        ]
    }
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {

        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["com/jigume/config/**",
                              "com/jigume/exception/**",
                              "com/jigume/repository/**",
                              "com/jigume/service/member/KakaoService.class",
                              "com/jigume/service/member/NaverService.class",
                              "com/jigume/service/member/AppleService.class"])
        }))
    }
}
//Jacoco 설정 끝